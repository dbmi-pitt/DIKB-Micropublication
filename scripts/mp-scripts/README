At the present time, these scripts are solely intended to prototype a
DIKB evidence base that uses MP and NP. 

############################################################################
pre-requisites
############################################################################

python libraries:

(1) Bio 
from "http://biopython.org/wiki/Download"

(2) rdflib >=4.2 with SPARQLWrapper 

(4) rdflib-jsonld
from "https://github.com/RDFLib/rdflib-jsonld"

############################################################################
The program currently works by attempting to translate data in the
current DIKB evidence base to an RDF graph according to
MP model diagrammed in the design folder.
############################################################################

(1) run python script to send sparql query against virtuoso endpoint.
output is a tsv file contains DDI assertions associated with evidences in DIKB.

$ python query-DIKB-DDIs.py

(2) run script to create XML/RDF graph represents drug drug
interactions in OA and Micropublication standard. This tries to fill
in some parts of the model using simple string matching. 

$ dikbv1.2-to-MP-plus-OA.py <number of folds> <output graph> <output csv>

ex. $ python dikbv1.2-to-MP-plus-OA.py 0 "../../data/mp-graphs/initial-dikb-mp-oa.xml" "../../data/mp-graphs/processed-dikb-ddis.tsv"

(3) load output graph to protege, run inference engine and export to MP graph

############################################################################
Deployment
############################################################################

load mp graph "data/inferred-graph-oa-mp.xml" to RDF endpoint as named graph
"inferred-graph-oa-mp.xml"

load mp owl, inferred by protege "mp_1.17_inferred.owl" to RDF endpoint as named graph "http://purl.org/mp/inferred_1_17_owl"



############################################################################
Virtuoso endpoint management
############################################################################

Initial load:
$ isql-vt
SQL> ld_dir ('/path/to/files', '*.n3', 'http://dbpedia.org');
SQL> rdf_loader_run();
SQL> select * from DB.DBA.load_list;

Reloading (DELETE THE OLD GRAPH FIRST from Virtuoso composer!):
$ isql-vt
SQL> log_enable(3,1); # see http://www.openlinksw.com/dataspace/dav/wiki/Main/VirtTipsAndTricksGuideDeleteLargeGraphs

SQL> SPARQL CLEAR GRAPH <>;
SQL> update DB.DBA.load_list set ll_state = 0 where ll_file = '<name of RDF file>';
SQL> rdf_loader_run();
SQL> select * from DB.DBA.load_list; 

clean load list:
delete from DBA.load_list where ll_state=2;


sparql select ?s from <obo:DIDEO_XXX94> where { ?s ?p ?o };


SPARQL SELECT DISTINCT ?g WHERE {GRAPH ?g { ?s a <http://www.nanopub.org/nschema#assertion>. }} ;

SPARQL SELECT DISTINCT ?g WHERE {GRAPH ?g { ?s a <http://www.nanopub.org/nschema#Nanopublication>. }} ;

SPARQL SELECT DISTINCT ?s WHERE {GRAPH ?g { ?s a <http://www.nanopub.org/nschema#Nanopublication>. }} ;